<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vueblog.mapper.CommentsMapper">


<!--    <select id="userSelectPage" resultType="com.vueblog.entity.Comments">-->
<!--        SELECT-->
<!--               c.id,-->
<!--               c.articleId,-->
<!--               c.userId,-->
<!--               u.userName,-->
<!--               u.email,-->
<!--               c.content,-->
<!--               c.created,-->
<!--               c.is_review,-->
<!--               c.parent_id,-->
<!--               c.reply_userId,-->
<!--       FROM-->
<!--            m_comments c-->
<!--        JOIN m_user u ON u.id = c.userId-->
<!--        WHERE-->
<!--            is_review = 1-->
<!--            AND-->
<!--            <if test="articleId != null">-->
<!--                article_id = #{articleId}-->
<!--            </if>-->
<!--            <if test="articleId != null">-->
<!--                parent_id is NULL-->
<!--            </if>-->
<!--        ORDER BY-->
<!--            c.id DESC-->
<!--        ${ew.customSqlSegment}-->
<!--    </select>-->
<!--    <select id="selectMapsPage" resultType="java.util.Map">-->

<!--    </select>-->
    <select id="adminGetCommentsList" resultType="com.vueblog.dto.CommentsAdminDTO">
    select
        c.id as id,
        a.title as articleTitle,
        u.userName as userName,
        u2.userName as replyUserName,
        c.content as content,
        c.created as created,
        c.is_review as isReview
    from
        m_comments c
    LEFT join m_article a on c.articleId = a.id
    LEFT join m_user u on c.userId = u.id
    LEFT join m_user u2 on c.reply_userId = u2.id
    <where>
        <if test="isReview != -1">
            c.is_review = #{isReview}
        </if>
    </where>
        ORDER BY
        c.created DESC
        LIMIT #{currentPage},#{pageSize}
    </select>
</mapper>
